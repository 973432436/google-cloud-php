{"id":"firestore\/v1beta1\/targetchange","type":"","title":"Google\\Cloud\\Firestore\\V1beta1\\TargetChange","name":"TargetChange","description":"<p>Targets being watched have changed.<\/p>\n<p>Generated from protobuf message <code>google.firestore.v1beta1.TargetChange<\/code><\/p>\n<p>Extends \\Google\\Protobuf\\Internal\\Message<\/p>","examples":[],"resources":[],"methods":[{"id":"getTargetChangeType","type":"instance","name":"getTargetChangeType","source":"Firestore\/src\/V1beta1\/TargetChange.php#L74","description":"<p>The type of change that occurred.<\/p>\n<p>Generated from protobuf field <code>.google.firestore.v1beta1.TargetChange.TargetChangeType target_change_type = 1;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"description":""}]},{"id":"setTargetChangeType","type":"instance","name":"setTargetChangeType","source":"Firestore\/src\/V1beta1\/TargetChange.php#L86","description":"<p>The type of change that occurred.<\/p>\n<p>Generated from protobuf field <code>.google.firestore.v1beta1.TargetChange.TargetChangeType target_change_type = 1;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The type of change that occurred.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-firestore\/v0.11.0\/firestore\/v1beta1\/targetchange\">Google\\Cloud\\Firestore\\V1beta1\\TargetChange<\/a>"],"description":""}]},{"id":"getTargetIds","type":"instance","name":"getTargetIds","source":"Firestore\/src\/V1beta1\/TargetChange.php#L105","description":"<p>The target IDs of targets that have changed.<\/p>\n<p>If empty, the change applies to all targets.\nFor <code>target_change_type=ADD<\/code>, the order of the target IDs matches the order\nof the requests to add the targets. This allows clients to unambiguously\nassociate server-assigned target IDs with added targets.\nFor other states, the order of the target IDs is not defined.<\/p>\n<p>Generated from protobuf field <code>repeated int32 target_ids = 2;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["\\Google\\Protobuf\\Internal\\RepeatedField"],"description":""}]},{"id":"setTargetIds","type":"instance","name":"setTargetIds","source":"Firestore\/src\/V1beta1\/TargetChange.php#L122","description":"<p>The target IDs of targets that have changed.<\/p>\n<p>If empty, the change applies to all targets.\nFor <code>target_change_type=ADD<\/code>, the order of the target IDs matches the order\nof the requests to add the targets. This allows clients to unambiguously\nassociate server-assigned target IDs with added targets.\nFor other states, the order of the target IDs is not defined.<\/p>\n<p>Generated from protobuf field <code>repeated int32 target_ids = 2;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The target IDs of targets that have changed.<\/p>\n<p>If empty, the change applies to all targets.\nFor <code>target_change_type=ADD<\/code>, the order of the target IDs matches the order\nof the requests to add the targets. This allows clients to unambiguously\nassociate server-assigned target IDs with added targets.\nFor other states, the order of the target IDs is not defined.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int[]<\/a>","\\Google\\Protobuf\\Internal\\RepeatedField"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-firestore\/v0.11.0\/firestore\/v1beta1\/targetchange\">Google\\Cloud\\Firestore\\V1beta1\\TargetChange<\/a>"],"description":""}]},{"id":"getCause","type":"instance","name":"getCause","source":"Firestore\/src\/V1beta1\/TargetChange.php#L136","description":"<p>The error that resulted in this change, if applicable.<\/p>\n<p>Generated from protobuf field <code>.google.rpc.Status cause = 3;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Rpc\/Status.html\" target=\"_blank\">Google\\Rpc\\Status<\/a>"],"description":""}]},{"id":"setCause","type":"instance","name":"setCause","source":"Firestore\/src\/V1beta1\/TargetChange.php#L148","description":"<p>The error that resulted in this change, if applicable.<\/p>\n<p>Generated from protobuf field <code>.google.rpc.Status cause = 3;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The error that resulted in this change, if applicable.<\/p>\n","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Rpc\/Status.html\" target=\"_blank\">Google\\Rpc\\Status<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-firestore\/v0.11.0\/firestore\/v1beta1\/targetchange\">Google\\Cloud\\Firestore\\V1beta1\\TargetChange<\/a>"],"description":""}]},{"id":"getResumeToken","type":"instance","name":"getResumeToken","source":"Firestore\/src\/V1beta1\/TargetChange.php#L164","description":"<p>A token that can be used to resume the stream for the given <code>target_ids<\/code>,\nor all targets if <code>target_ids<\/code> is empty.<\/p>\n<p>Not set on every target change.<\/p>\n<p>Generated from protobuf field <code>bytes resume_token = 4;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setResumeToken","type":"instance","name":"setResumeToken","source":"Firestore\/src\/V1beta1\/TargetChange.php#L178","description":"<p>A token that can be used to resume the stream for the given <code>target_ids<\/code>,\nor all targets if <code>target_ids<\/code> is empty.<\/p>\n<p>Not set on every target change.<\/p>\n<p>Generated from protobuf field <code>bytes resume_token = 4;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>A token that can be used to resume the stream for the given <code>target_ids<\/code>,\nor all targets if <code>target_ids<\/code> is empty.<\/p>\n<p>Not set on every target change.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-firestore\/v0.11.0\/firestore\/v1beta1\/targetchange\">Google\\Cloud\\Firestore\\V1beta1\\TargetChange<\/a>"],"description":""}]},{"id":"getReadTime","type":"instance","name":"getReadTime","source":"Firestore\/src\/V1beta1\/TargetChange.php#L199","description":"<p>The consistent <code>read_time<\/code> for the given <code>target_ids<\/code> (omitted when the\ntarget_ids are not at a consistent snapshot).<\/p>\n<p>The stream is guaranteed to send a <code>read_time<\/code> with <code>target_ids<\/code> empty\nwhenever the entire stream reaches a new consistent snapshot. ADD,\nCURRENT, and RESET messages are guaranteed to (eventually) result in a\nnew consistent snapshot (while NO_CHANGE and REMOVE messages are not).\nFor a given stream, <code>read_time<\/code> is guaranteed to be monotonically\nincreasing.<\/p>\n<p>Generated from protobuf field <code>.google.protobuf.Timestamp read_time = 6;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["\\Google\\Protobuf\\Timestamp"],"description":""}]},{"id":"setReadTime","type":"instance","name":"setReadTime","source":"Firestore\/src\/V1beta1\/TargetChange.php#L218","description":"<p>The consistent <code>read_time<\/code> for the given <code>target_ids<\/code> (omitted when the\ntarget_ids are not at a consistent snapshot).<\/p>\n<p>The stream is guaranteed to send a <code>read_time<\/code> with <code>target_ids<\/code> empty\nwhenever the entire stream reaches a new consistent snapshot. ADD,\nCURRENT, and RESET messages are guaranteed to (eventually) result in a\nnew consistent snapshot (while NO_CHANGE and REMOVE messages are not).\nFor a given stream, <code>read_time<\/code> is guaranteed to be monotonically\nincreasing.<\/p>\n<p>Generated from protobuf field <code>.google.protobuf.Timestamp read_time = 6;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The consistent <code>read_time<\/code> for the given <code>target_ids<\/code> (omitted when the\ntarget_ids are not at a consistent snapshot).<\/p>\n<p>The stream is guaranteed to send a <code>read_time<\/code> with <code>target_ids<\/code> empty\nwhenever the entire stream reaches a new consistent snapshot. ADD,\nCURRENT, and RESET messages are guaranteed to (eventually) result in a\nnew consistent snapshot (while NO_CHANGE and REMOVE messages are not).\nFor a given stream, <code>read_time<\/code> is guaranteed to be monotonically\nincreasing.<\/p>\n","types":["\\Google\\Protobuf\\Timestamp"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-firestore\/v0.11.0\/firestore\/v1beta1\/targetchange\">Google\\Cloud\\Firestore\\V1beta1\\TargetChange<\/a>"],"description":""}]}]}