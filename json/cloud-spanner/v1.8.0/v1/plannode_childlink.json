{"id":"spanner\/v1\/plannode_childlink","type":"","title":"Google\\Cloud\\Spanner\\V1\\PlanNode_ChildLink","name":"PlanNode_ChildLink","description":"<p>Metadata associated with a parent-child relationship appearing in a\n[PlanNode][google.spanner.v1.PlanNode].<\/p>\n<p>Generated from protobuf message <code>google.spanner.v1.PlanNode.ChildLink<\/code><\/p>\n<p>Extends \\Google\\Protobuf\\Internal\\Message<\/p>","examples":[],"resources":[],"methods":[{"id":"getChildIndex","type":"instance","name":"getChildIndex","source":"Spanner\/src\/V1\/PlanNode_ChildLink.php#L59","description":"<p>The node to which the link points.<\/p>\n<p>Generated from protobuf field <code>int32 child_index = 1;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"description":""}]},{"id":"setChildIndex","type":"instance","name":"setChildIndex","source":"Spanner\/src\/V1\/PlanNode_ChildLink.php#L71","description":"<p>The node to which the link points.<\/p>\n<p>Generated from protobuf field <code>int32 child_index = 1;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The node to which the link points.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-spanner\/v1.8.0\/spanner\/v1\/plannode_childlink\">Google\\Cloud\\Spanner\\V1\\PlanNode_ChildLink<\/a>"],"description":""}]},{"id":"getType","type":"instance","name":"getType","source":"Spanner\/src\/V1\/PlanNode_ChildLink.php#L88","description":"<p>The type of the link. For example, in Hash Joins this could be used to\ndistinguish between the build child and the probe child, or in the case\nof the child being an output variable, to represent the tag associated\nwith the output variable.<\/p>\n<p>Generated from protobuf field <code>string type = 2;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setType","type":"instance","name":"setType","source":"Spanner\/src\/V1\/PlanNode_ChildLink.php#L103","description":"<p>The type of the link. For example, in Hash Joins this could be used to\ndistinguish between the build child and the probe child, or in the case\nof the child being an output variable, to represent the tag associated\nwith the output variable.<\/p>\n<p>Generated from protobuf field <code>string type = 2;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The type of the link. For example, in Hash Joins this could be used to\ndistinguish between the build child and the probe child, or in the case\nof the child being an output variable, to represent the tag associated\nwith the output variable.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-spanner\/v1.8.0\/spanner\/v1\/plannode_childlink\">Google\\Cloud\\Spanner\\V1\\PlanNode_ChildLink<\/a>"],"description":""}]},{"id":"getVariable","type":"instance","name":"getVariable","source":"Spanner\/src\/V1\/PlanNode_ChildLink.php#L124","description":"<p>Only present if the child node is [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] and corresponds\nto an output variable of the parent node. The field carries the name of\nthe output variable.<\/p>\n<p>For example, a <code>TableScan<\/code> operator that reads rows from a table will\nhave child links to the <code>SCALAR<\/code> nodes representing the output variables\ncreated for each column that is read by the operator. The corresponding\n<code>variable<\/code> fields will be set to the variable names assigned to the\ncolumns.<\/p>\n<p>Generated from protobuf field <code>string variable = 3;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setVariable","type":"instance","name":"setVariable","source":"Spanner\/src\/V1\/PlanNode_ChildLink.php#L143","description":"<p>Only present if the child node is [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] and corresponds\nto an output variable of the parent node. The field carries the name of\nthe output variable.<\/p>\n<p>For example, a <code>TableScan<\/code> operator that reads rows from a table will\nhave child links to the <code>SCALAR<\/code> nodes representing the output variables\ncreated for each column that is read by the operator. The corresponding\n<code>variable<\/code> fields will be set to the variable names assigned to the\ncolumns.<\/p>\n<p>Generated from protobuf field <code>string variable = 3;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Only present if the child node is [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] and corresponds\nto an output variable of the parent node. The field carries the name of\nthe output variable.<\/p>\n<p>For example, a <code>TableScan<\/code> operator that reads rows from a table will\nhave child links to the <code>SCALAR<\/code> nodes representing the output variables\ncreated for each column that is read by the operator. The corresponding\n<code>variable<\/code> fields will be set to the variable names assigned to the\ncolumns.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-spanner\/v1.8.0\/spanner\/v1\/plannode_childlink\">Google\\Cloud\\Spanner\\V1\\PlanNode_ChildLink<\/a>"],"description":""}]}]}